#CoDa_DQO

rm(list = ls())
library(graphics); library(compositions); library(mgcv); library(hydroGOF)
setwd("C:/.....")


file2<-"CoDa.csv"; 
data2<-read.csv(file=file2, header=TRUE, sep = ";", dec = "."); 
kk<-5

## 1.0 Programación
xx<-data2[,c(8:9)]; ejex<-data2[,5]; 
xx<-as.matrix(xx)
signs <- rbind (c( 1, -1));VV=gsi.buildilrBase(t(signs))
dd <- unclass(ilr(xx,VV))
gam1 <- gam(dd[,1] ~ s(ejex,k=kk), family=gaussian);     gam1.pred <- predict.gam(gam1)
zzz1<-ilrInv(array(cbind(gam1.pred),dim = c(length(gam1.pred),1)),VV)
DQO_M=zzz1[,1]
DQOXX=DQO_M*10000

summary(gam1)

plot(data2[,5],DQOXX,xlab="LNDBO",ylab="DQO",pch=1)
points(data2[,5],data2[,6],col="blue",pch=3)
legend("topright",legend=c("GAM","valor"),col=c("black","blue"),pch=c(1,3))

data2=cbind(data2,CoDa_GAM=DQOXX)
write.csv(data2,file="C:/...../xxx.csv",sep = ";", dec = ".")

###PRUEBAS DE CALIDAD
file2<-"fili2.csv"; 
fili1<-read.csv(file=file2, header=TRUE, sep = ",", dec = "."); 
#NSE (Indica precisión de modelo. Mientras más cerca a 1, mejor el modelo)
NSE(fili1[,11],fili1[,7])
#rmse (Mide le promedio de los errores cuadráticos, entre el estimador y lo que se estima)
#Mientras más baja, mejor el modelo. Ojoooo "Comparaciones entre diferentes tipos de datos serían inválidas porque la medida depende de la escala de los números utilizados"
rmse(fili1[,11],fili1[,7])
